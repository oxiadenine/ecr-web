services:
  ecr-web:
    container_name: ecr-web
    image: ecr-web
    build:
      context: .
      args:
        user: ${USER}
    labels:
      - traefik.enable=true
      - traefik.http.routers.ecrweb.rule=Host(`${HOST}`) || Host(`www.${HOST}`)
      - traefik.http.routers.ecrweb.entrypoints=websecure
      - traefik.http.routers.ecrweb.tls=true
      - traefik.http.routers.ecrweb.middlewares=wwwredirect
      - traefik.http.middlewares.wwwredirect.redirectregex.regex=^https?://www\.${HOST}/?(.*)$
      - traefik.http.middlewares.wwwredirect.redirectregex.replacement=https://${HOST}/$${1}
      - traefik.http.middlewares.wwwredirect.redirectregex.permanent=true
    volumes:
      - ./data:/app/data
    networks:
      - ecr-network
  ecr-proxy:
    container_name: ecr-proxy
    image: traefik:v3.3.2
    ports:
      - 80:80
      - 443:443
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ecr-network
networks:
  ecr-network:
    name: ecr-network
